{
  "GITLAB_NAMESPACES": {
    "meh": {
      "id": 4495257,
      "name": "greenhousegroup/meh",
      "clusterVariableKey": "MEH_K8S_CLUSTER_CONFIG"
    },
    "creativedevelopment": {
      "id": 4495269,
      "name": "greenhousegroup/creativedevelopment",
      "clusterVariableKey": "MEH_K8S_CLUSTER_CONFIG"
    }
  },
  "LINT_STAGED_GLOBS": {
    "none": "*.js",
    "noneTypescript": "*.{js,ts}",
    "react": "*.{js,jsx}",
    "reactTypescript": "*.{js,jsx,ts,tsx}",
    "vue": "*.{js,vue}",
    "vueTypescript": "*.{js,ts,vue}"
  },
  "LINT_SCRIPTS": {
    "none": "eslint --ignore-path .gitignore .",
    "noneTypescript": "eslint --ext .js,.ts --ignore-path .gitignore .",
    "react": "eslint --ext .js,.jsx --ignore-path .gitignore .",
    "reactTypescript": "eslint --ext .js,.ts,.jsx,.tsx --ignore-path .gitignore .",
    "vue": "eslint --ext .js,.vue --ignore-path .gitignore .",
    "vueTypescript": "eslint --ext .js,.ts,.vue --ignore-path .gitignore .",
    "typescriptParser": "\"parser\": \"@typescript-eslint/parser\",\n  "
  },
  "ESLINT_EXTENDS": {
    "none": "[\"airbnb-base\", \"plugin:prettier/recommended\"]",
    "noneTypescript": "[\"airbnb-base\", \"plugin:@typescript-eslint/recommended\", \"prettier\", \"prettier/@typescript-eslint\"]",
    "react": "[\"airbnb\", \"plugin:prettier/recommended\"]",
    "reactTypescript": "[\"airbnb\", \"plugin:@typescript-eslint/recommended\", \"prettier\", \"prettier/@typescript-eslint\"]",
    "vue": "[\"plugin:vue/recommended\", \"airbnb-base\", \"prettier/vue\", \"plugin:prettier/recommended\"]",
    "vueTypescript": "[\"plugin:vue/recommended\", \"airbnb-base\", \"plugin:@typescript-eslint/recommended\", \"prettier/vue\", \"prettier/@typescript-eslint\"]"
  },
  "DEFAULT_DEPENDENCIES": [],
  "DEFAULT_DEV_DEPENDENCIES": ["husky", "prettier", "lint-staged@9", "eslint-config-prettier"],
  "DOCUMENTATION": {
    "airflow": "## Airflow DAG(s)\n\nAny DAG(s) present in `/airflow` will be automatically deployed to Airflow by CI/CD, when pushed to the `master` branch.\n\n",
    "redis": "\nRead-only | REDIS_URI | Database connection string.",
    "mongodb": "\nRead-only | MONGODB_URI | Database connection string."
  },
  "STAGES_DEPLOY_SCRIPTS": {
    "test": "\n\ndeploying_test:\n  <<: *deploy_config\n  when: on_success\n  script:\n    - source init-kubectl.sh\n    - echo 1 > REPLICAS && echo '-test' > STAGE\n    - sh ./scripts/replace_values_yaml.sh values.template.yml\n    - helm upgrade --install \"$CI_PROJECT_NAME-test\" ./chart/\n  environment:\n    name: test\n  except:\n    refs:\n      - master",
    "acc": "\n\ndeploying_acceptance:\n  <<: *deploy_config\n  when: on_success\n  script:\n    - source init-kubectl.sh\n    - echo 1 > REPLICAS && echo '-acc' > STAGE\n    - sh ./scripts/replace_values_yaml.sh values.template.yml\n    - helm upgrade --install \"$CI_PROJECT_NAME-acc\" ./chart/\n  environment:\n    name: acceptance\n  only:\n    refs:\n    - develop",
    "prod": "\n\ndeploying_production:\n  <<: *deploy_config\n  when: on_success\n  script:\n    - source init-kubectl.sh\n    - echo 1 > REPLICAS && echo '' > STAGE\n    - sh ./scripts/replace_values_yaml.sh values.template.yml\n    - helm upgrade --install \"$CI_PROJECT_NAME\" ./chart/\n  environment:\n    name: production\n  only:\n    refs:\n      - master",
    "airflow": "\n\ndeploying_airflow:\n  tags:\n    - kube-02.bmidevelopment\n  dependencies:\n    - building\n  stage: deploying\n  image: python:3\n  before_script:\n    - pip install awscli\n  script:\n    - \"sed -i \\\"s/__NAME__/$(cat package.json | grep name | head -1 | sed 's/name//' | sed 's/[\\\\\\\",: ]//g')/g\\\" airflow/*.py\"\n    - \"sed -i \\\"s/__AUTHOR__/$(cat package.json | grep author | head -1 | sed 's/author//' | sed 's/[\\\\\\\",:]//g' | sed 's/^   //')/g\\\" airflow/*.py\"\n    - 'sed -i \"s/__DOCKER_IMAGE__/$(cat values.template.yml | grep dockerImage: | head -1 | sed ''s/dockerImage://'' | sed ''s/ //g'' | sed ''s/\\//\\\\\\//g'')/g\" airflow/*.py'\n    - 'sed -i \"s/__SECRETS__/$(cat values.template.yml | grep envSecretName: | head -1 | sed ''s/envSecretName://'' | sed ''s/ //g'' | sed ''s/__STAGE__//'')/g\" airflow/*.py'\n    - sed -i \"s/__VERSION__/$(echo $CI_COMMIT_SHA)/g\" airflow/*.py\n    - export PROJECT_PATH=$(echo $CI_PROJECT_NAME | tr -s '-' | tr '-' '_')\n    - aws s3 cp airflow/ s3://meh-airflow-bucket/dags/dags/$PROJECT_PATH/ --recursive --include \"*.py\"\n  only:\n    refs:\n      - master"
  }
}
